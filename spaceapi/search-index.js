var searchIndex = {};
searchIndex['spaceapi'] = {"items":[[0,"","spaceapi","Space API definitions and serialization.",null,null],[3,"Location","","",null,null],[12,"address","","",0,null],[12,"lat","","",0,null],[12,"lon","","",0,null],[3,"Spacefed","","",null,null],[12,"spacenet","","",1,null],[12,"spacesaml","","",1,null],[12,"spacephone","","",1,null],[3,"Icon","","",null,null],[12,"open","","",2,null],[12,"close","","",2,null],[3,"State","","",null,null],[12,"open","","",3,null],[12,"lastchange","","",3,null],[12,"trigger_person","","",3,null],[12,"message","","",3,null],[12,"icon","","",3,null],[3,"Event","","",null,null],[12,"name","","",4,null],[12,"_type","","",4,null],[12,"timestamp","","",4,null],[12,"extra","","",4,null],[3,"Contact","","",null,null],[12,"irc","","",5,null],[12,"twitter","","",5,null],[12,"foursquare","","",5,null],[12,"email","","",5,null],[3,"Feed","","",null,null],[12,"_type","","",6,null],[12,"url","","",6,null],[3,"Feeds","","",null,null],[12,"blog","","",7,null],[12,"wiki","","",7,null],[12,"calendar","","",7,null],[12,"flickr","","",7,null],[3,"Cache","","",null,null],[12,"schedule","","",8,null],[3,"RadioShow","","",null,null],[12,"name","","",9,null],[12,"url","","",9,null],[12,"_type","","",9,null],[12,"start","","",9,null],[12,"end","","",9,null],[3,"Status","","The main Space API status object.",null,null],[12,"api","","",10,null],[12,"space","","",10,null],[12,"logo","","",10,null],[12,"url","","",10,null],[12,"location","","",10,null],[12,"contact","","",10,null],[12,"spacefed","","",10,null],[12,"projects","","",10,null],[12,"cam","","",10,null],[12,"feeds","","",10,null],[12,"events","","",10,null],[12,"radio_show","","",10,null],[12,"cache","","",10,null],[12,"issue_report_channels","","",10,null],[12,"state","","",10,null],[12,"sensors","","",10,null],[0,"optional","","Useful stuff related to the spaceapi.",null,null],[4,"Optional","spaceapi::optional","An ``Optional`` can contain ``Optional::Value<T>`` or ``Optional::Absent``.\nIt is similar to an ``Option``, but ``Optional::Absent`` means it will be\nomitted when serialized, while ``None`` will be serialized to ``null``.",null,null],[13,"Value","","",11,null],[13,"Absent","","",11,null],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"optional"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"optional"},{"name":"optional"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"optional"}],"output":{"name":"optional"}}],[11,"unwrap","","Moves the value `v` out of the `Optional<T>` if it is `Value(v)`.",11,{"inputs":[{"name":"optional"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",11,{"inputs":[{"name":"optional"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Optional<T>` to `Optional<U>` by applying a function to a contained value",11,{"inputs":[{"name":"optional"},{"name":"f"}],"output":{"name":"optional"}}],[11,"map_or","","Applies a function to the contained value or returns a default.  see\n[`std::option::Option<T>::map_or`](http://doc.rust-lang.org/std/option/enum.Option.html#method.map_or)",11,{"inputs":[{"name":"optional"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"as_mut","","Converts from `Optional<T>` to `Optional<&mut T>`",11,{"inputs":[{"name":"optional"}],"output":{"name":"optional"}}],[11,"as_ref","","Converts from `Optional<T>` to `Optional<&T>`",11,{"inputs":[{"name":"optional"}],"output":{"name":"optional"}}],[11,"and_then","","Returns `Absent` if the optional is `Absent`, otherwise calls `f` with the\nwrapped value and returns the result.",11,{"inputs":[{"name":"optional"},{"name":"f"}],"output":{"name":"optional"}}],[11,"is_absent","","Returns `true` if the optional is a `Absent` value",11,{"inputs":[{"name":"optional"}],"output":{"name":"bool"}}],[11,"into","","Convert Optional<T> into Option<T>",11,{"inputs":[{"name":"optional"}],"output":{"name":"option"}}],[0,"sensors","spaceapi","Module defining all sensor related structures.",null,null],[3,"PeopleNowPresentSensorTemplate","spaceapi::sensors","",null,null],[12,"location","","",12,null],[12,"name","","",12,null],[12,"names","","",12,null],[12,"description","","",12,null],[3,"TemperatureSensorTemplate","","",null,null],[12,"unit","","",13,null],[12,"location","","",13,null],[12,"name","","",13,null],[12,"description","","",13,null],[3,"PeopleNowPresentSensor","","",null,null],[12,"location","","",14,null],[12,"name","","",14,null],[12,"names","","",14,null],[12,"description","","",14,null],[12,"value","","",14,null],[3,"TemperatureSensor","","",null,null],[12,"unit","","",15,null],[12,"location","","",15,null],[12,"name","","",15,null],[12,"description","","",15,null],[12,"value","","",15,null],[3,"Sensors","","",null,null],[12,"people_now_present","","",16,null],[12,"temperature","","",16,null],[8,"SensorTemplate","","A trait for all possible sensor templates.",null,null],[10,"to_sensor","","",17,{"inputs":[{"name":"sensortemplate"},{"name":"str"},{"name":"sensors"}],"output":null}],[11,"clone","","",12,{"inputs":[{"name":"peoplenowpresentsensortemplate"}],"output":{"name":"peoplenowpresentsensortemplate"}}],[11,"fmt","","",12,{"inputs":[{"name":"peoplenowpresentsensortemplate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_sensor","","",12,{"inputs":[{"name":"peoplenowpresentsensortemplate"},{"name":"str"},{"name":"sensors"}],"output":null}],[11,"clone","","",13,{"inputs":[{"name":"temperaturesensortemplate"}],"output":{"name":"temperaturesensortemplate"}}],[11,"fmt","","",13,{"inputs":[{"name":"temperaturesensortemplate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_sensor","","",13,{"inputs":[{"name":"temperaturesensortemplate"},{"name":"str"},{"name":"sensors"}],"output":null}],[11,"clone","","",14,{"inputs":[{"name":"peoplenowpresentsensor"}],"output":{"name":"peoplenowpresentsensor"}}],[11,"fmt","","",14,{"inputs":[{"name":"peoplenowpresentsensor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"temperaturesensor"}],"output":{"name":"temperaturesensor"}}],[11,"fmt","","",15,{"inputs":[{"name":"temperaturesensor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"sensors"}],"output":{"name":"sensors"}}],[11,"fmt","","",16,{"inputs":[{"name":"sensors"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_json","","",16,{"inputs":[{"name":"sensors"}],"output":{"name":"json"}}],[11,"to_json","","",14,{"inputs":[{"name":"peoplenowpresentsensor"}],"output":{"name":"json"}}],[11,"to_json","","",15,{"inputs":[{"name":"temperaturesensor"}],"output":{"name":"json"}}],[11,"clone","spaceapi","",0,{"inputs":[{"name":"location"}],"output":{"name":"location"}}],[11,"fmt","","",0,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"spacefed"}],"output":{"name":"spacefed"}}],[11,"fmt","","",1,{"inputs":[{"name":"spacefed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"icon"}],"output":{"name":"icon"}}],[11,"fmt","","",2,{"inputs":[{"name":"icon"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",3,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"fmt","","",4,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"contact"}],"output":{"name":"contact"}}],[11,"fmt","","",5,{"inputs":[{"name":"contact"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"feed"}],"output":{"name":"feed"}}],[11,"fmt","","",6,{"inputs":[{"name":"feed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"feeds"}],"output":{"name":"feeds"}}],[11,"fmt","","",7,{"inputs":[{"name":"feeds"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"cache"}],"output":{"name":"cache"}}],[11,"fmt","","",8,{"inputs":[{"name":"cache"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"radioshow"}],"output":{"name":"radioshow"}}],[11,"fmt","","",9,{"inputs":[{"name":"radioshow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"fmt","","",10,{"inputs":[{"name":"status"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new Status object with only the absolutely required fields.",10,{"inputs":[{"name":"status"},{"name":"s"},{"name":"s"},{"name":"s"},{"name":"location"},{"name":"contact"},{"name":"vec"}],"output":{"name":"status"}}],[11,"to_json","","",10,{"inputs":[{"name":"status"}],"output":{"name":"json"}}],[11,"to_json","","",0,{"inputs":[{"name":"location"}],"output":{"name":"json"}}],[11,"to_json","","",1,{"inputs":[{"name":"spacefed"}],"output":{"name":"json"}}],[11,"to_json","","",2,{"inputs":[{"name":"icon"}],"output":{"name":"json"}}],[11,"to_json","","",3,{"inputs":[{"name":"state"}],"output":{"name":"json"}}],[11,"to_json","","",4,{"inputs":[{"name":"event"}],"output":{"name":"json"}}],[11,"to_json","","",5,{"inputs":[{"name":"contact"}],"output":{"name":"json"}}],[11,"to_json","","",6,{"inputs":[{"name":"feed"}],"output":{"name":"json"}}],[11,"to_json","","",7,{"inputs":[{"name":"feeds"}],"output":{"name":"json"}}],[11,"to_json","","",8,{"inputs":[{"name":"cache"}],"output":{"name":"json"}}],[11,"to_json","","",9,{"inputs":[{"name":"radioshow"}],"output":{"name":"json"}}]],"paths":[[3,"Location"],[3,"Spacefed"],[3,"Icon"],[3,"State"],[3,"Event"],[3,"Contact"],[3,"Feed"],[3,"Feeds"],[3,"Cache"],[3,"RadioShow"],[3,"Status"],[4,"Optional"],[3,"PeopleNowPresentSensorTemplate"],[3,"TemperatureSensorTemplate"],[3,"PeopleNowPresentSensor"],[3,"TemperatureSensor"],[3,"Sensors"],[8,"SensorTemplate"]]};
initSearch(searchIndex);

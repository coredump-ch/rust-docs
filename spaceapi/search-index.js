var searchIndex = {};
searchIndex["spaceapi"] = {"doc":"Space API definitions and serialization.","items":[[3,"Location","spaceapi","",null,null],[12,"address","","",0,null],[12,"lat","","",0,null],[12,"lon","","",0,null],[3,"Spacefed","","",null,null],[12,"spacenet","","",1,null],[12,"spacesaml","","",1,null],[12,"spacephone","","",1,null],[3,"Icon","","",null,null],[12,"open","","",2,null],[12,"close","","",2,null],[3,"State","","",null,null],[12,"open","","",3,null],[12,"lastchange","","",3,null],[12,"trigger_person","","",3,null],[12,"message","","",3,null],[12,"icon","","",3,null],[3,"Event","","",null,null],[12,"name","","",4,null],[12,"_type","","",4,null],[12,"timestamp","","",4,null],[12,"extra","","",4,null],[3,"Keymaster","","",null,null],[12,"name","","",5,null],[12,"irc_nick","","",5,null],[12,"phone","","",5,null],[12,"email","","",5,null],[12,"twitter","","",5,null],[3,"GoogleContact","","",null,null],[12,"plus","","",6,null],[3,"Contact","","",null,null],[12,"phone","","",7,null],[12,"sip","","",7,null],[12,"keymasters","","",7,null],[12,"irc","","",7,null],[12,"twitter","","",7,null],[12,"facebook","","",7,null],[12,"google","","",7,null],[12,"identica","","",7,null],[12,"foursquare","","",7,null],[12,"email","","",7,null],[12,"ml","","",7,null],[12,"jabber","","",7,null],[12,"issue_mail","","",7,null],[3,"Feed","","",null,null],[12,"_type","","",8,null],[12,"url","","",8,null],[3,"Feeds","","",null,null],[12,"blog","","",9,null],[12,"wiki","","",9,null],[12,"calendar","","",9,null],[12,"flickr","","",9,null],[3,"Cache","","",null,null],[12,"schedule","","",10,null],[3,"RadioShow","","",null,null],[12,"name","","",11,null],[12,"url","","",11,null],[12,"_type","","",11,null],[12,"start","","",11,null],[12,"end","","",11,null],[3,"Status","","The main Space API status object.",null,null],[12,"api","","",12,null],[12,"space","","",12,null],[12,"logo","","",12,null],[12,"url","","",12,null],[12,"location","","",12,null],[12,"contact","","",12,null],[12,"spacefed","","",12,null],[12,"projects","","",12,null],[12,"cam","","",12,null],[12,"feeds","","",12,null],[12,"events","","",12,null],[12,"radio_show","","",12,null],[12,"cache","","",12,null],[12,"issue_report_channels","","",12,null],[12,"state","","",12,null],[12,"sensors","","",12,null],[12,"ext_versions","","",12,null],[5,"get_version","","Return own crate version. Used in API responses.",null,{"inputs":[],"output":{"name":"str"}}],[0,"optional","","Implementation of the custom `Optional` type. See `Optional`\ndocs for more information.",null,null],[4,"Optional","spaceapi::optional","An `Optional` can contain either `Value&lt;T&gt;` or `Absent`.\nIt is similar to an `Option`, but `None` will be serialized to `null`\nwhile `Absent` means that both the key and the value will be omitted\nwhen serialized.",null,null],[13,"Value","","",13,null],[13,"Absent","","",13,null],[11,"hash","","",13,null],[11,"fmt","","",13,null],[11,"cmp","","",13,null],[11,"partial_cmp","","",13,null],[11,"lt","","",13,null],[11,"le","","",13,null],[11,"gt","","",13,null],[11,"ge","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"unwrap","","Moves the value `v` out of the `Optional&lt;T&gt;` if it is `Value(v)`.",13,null],[11,"unwrap_or","","Returns the contained value or a default.",13,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",13,null],[11,"map","","Maps an `Optional&lt;T&gt;` to `Optional&lt;U&gt;` by applying a function to a contained value",13,null],[11,"map_or","","Applies a function to the contained value or returns a default.  see\n[`std::option::Option&lt;T&gt;::map_or`](http://doc.rust-lang.org/std/option/enum.Option.html#method.map_or)",13,null],[11,"as_mut","","Converts from `Optional&lt;T&gt;` to `Optional&lt;&amp;mut T&gt;`",13,null],[11,"as_ref","","Converts from `Optional&lt;T&gt;` to `Optional&lt;&amp;T&gt;`",13,null],[11,"and_then","","Returns `Absent` if the optional is `Absent`, otherwise calls `f` with the\nwrapped value and returns the result.",13,null],[11,"is_absent","","Returns `true` if the optional is a `Absent` value",13,null],[11,"default","","An optional value is absent by default.",13,{"inputs":[],"output":{"name":"optional"}}],[11,"into","","Convert Optional&lt;T&gt; into Option&lt;T&gt;",13,null],[11,"decode","","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"sensors","spaceapi","Module defining all sensor related structures.",null,null],[3,"PeopleNowPresentSensorTemplate","spaceapi::sensors","",null,null],[12,"location","","",14,null],[12,"name","","",14,null],[12,"names","","",14,null],[12,"description","","",14,null],[3,"TemperatureSensorTemplate","","",null,null],[12,"unit","","",15,null],[12,"location","","",15,null],[12,"name","","",15,null],[12,"description","","",15,null],[3,"PeopleNowPresentSensor","","",null,null],[12,"location","","",16,null],[12,"name","","",16,null],[12,"names","","",16,null],[12,"description","","",16,null],[12,"value","","",16,null],[3,"TemperatureSensor","","",null,null],[12,"unit","","",17,null],[12,"location","","",17,null],[12,"name","","",17,null],[12,"description","","",17,null],[12,"value","","",17,null],[3,"Sensors","","",null,null],[12,"people_now_present","","",18,null],[12,"temperature","","",18,null],[8,"SensorTemplate","","A trait for all possible sensor templates.",null,null],[10,"to_sensor","","",19,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"to_sensor","","",14,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"to_sensor","","",15,null],[11,"decode","","",16,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"decode","","",17,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"decode","","",18,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"to_json","","",18,null],[11,"to_json","","",16,null],[11,"to_json","","",17,null],[11,"decode","spaceapi","",0,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"decode","","",1,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"decode","","",3,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"decode","","",4,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"decode","","",5,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"decode","","",6,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"decode","","",7,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"decode","","",8,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"decode","","",9,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"decode","","",10,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"decode","","",11,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"decode","","",12,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"new","","Create a new Status object with only the absolutely required fields.",12,{"inputs":[{"name":"s"},{"name":"s"},{"name":"s"},{"name":"location"},{"name":"contact"},{"name":"vec"}],"output":{"name":"status"}}],[11,"to_json","","",12,null],[11,"to_json","","",0,null],[11,"to_json","","",1,null],[11,"to_json","","",2,null],[11,"to_json","","",3,null],[11,"to_json","","",4,null],[11,"to_json","","",5,null],[11,"to_json","","",6,null],[11,"to_json","","",7,null],[11,"to_json","","",8,null],[11,"to_json","","",9,null],[11,"to_json","","",10,null],[11,"to_json","","",11,null]],"paths":[[3,"Location"],[3,"Spacefed"],[3,"Icon"],[3,"State"],[3,"Event"],[3,"Keymaster"],[3,"GoogleContact"],[3,"Contact"],[3,"Feed"],[3,"Feeds"],[3,"Cache"],[3,"RadioShow"],[3,"Status"],[4,"Optional"],[3,"PeopleNowPresentSensorTemplate"],[3,"TemperatureSensorTemplate"],[3,"PeopleNowPresentSensor"],[3,"TemperatureSensor"],[3,"Sensors"],[8,"SensorTemplate"]]};
initSearch(searchIndex);
